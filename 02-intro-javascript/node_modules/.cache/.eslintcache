[{"C:\\Users\\rocio.cellini\\Documents\\React-FernandoHerrera-UdemyPago\\02-intro-javascript\\src\\index.js":"1","C:\\Users\\rocio.cellini\\Documents\\React-FernandoHerrera-UdemyPago\\02-intro-javascript\\src\\data\\heroes.js":"2","C:\\Users\\rocio.cellini\\Documents\\React-FernandoHerrera-UdemyPago\\02-intro-javascript\\src\\bases\\08-imp-exp.js":"3"},{"size":20,"mtime":1637170730574,"results":"4","hashOfConfig":"5"},{"size":550,"mtime":1636998876088,"results":"6","hashOfConfig":"5"},{"size":856,"mtime":1637009238227,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2wczr2",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},"C:\\Users\\rocio.cellini\\Documents\\React-FernandoHerrera-UdemyPago\\02-intro-javascript\\src\\index.js",[],"C:\\Users\\rocio.cellini\\Documents\\React-FernandoHerrera-UdemyPago\\02-intro-javascript\\src\\data\\heroes.js",[],["16","17"],"C:\\Users\\rocio.cellini\\Documents\\React-FernandoHerrera-UdemyPago\\02-intro-javascript\\src\\bases\\08-imp-exp.js",["18"],"//Import, export y funciones comunes de arreglos\r\n//Multiples exportaciones y exportaciones por defecto\r\n\r\nimport heroes, { owners } from '../data/heroes'; // no hace falta el .js\r\n/* si se importa por defecto y una constante o algo más, lo q es por defecto va \r\nsuelto y el resto va entre llaves, como si fuera una desestructuración de objetos*/\r\n//console.log(heroes);\r\n//console.log(owners);\r\n\r\nexport const getHeroesById = (id) => heroes.find((heroe) => heroe.id === id);\r\n\r\n//console.log( getHeroesById(2));\r\n\r\n//Tarea: hacer lo mismo pero para obtener el owner. Como find solo se usa para obtener uno, ahora debemos usar filter\r\n//const getHeroesByOwner = (owner) => heroes.find((heroe) => heroe.id === id);\r\n\r\nexport const getHeroesByOwner = (owner) => heroes.filter((heroe) => heroe.owner === owner);\r\n\r\n//console.log(getHeroesByOwner('Marvel'));",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":4,"column":18,"nodeType":"25","messageId":"26","endLine":4,"endColumn":24},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'owners' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]